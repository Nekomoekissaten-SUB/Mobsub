name: publish

on:
  push:
    branches: [ "master" ]
    paths:
    - '**.cs'
    - '**.csproj'
  pull_request:
    branches: [ "master" ]
    paths:
    - '**.cs'
    - '**.csproj'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        env:
          - os: windows-latest
            identifier: win
          - os: macos-latest
            identifier: osx
          # - os: ubuntu-latest
          #   identifier: linux
        arch: ['x64', 'arm64']
        dotnet_version: ['10.x']
        target: ['net10.0']

    name: build-${{ matrix.env.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.env.os }}

    steps:

    - name: Install linux arm64 prereqs
      # copy from https://github.com/dn-vm/dnvm
      if: matrix.env.identifier == 'linux' && matrix.arch == 'arm64'
      run: |
        sudo dpkg --add-architecture arm64
        sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted ports
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
        EOF'
        sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
        sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
        sudo apt update
        sudo apt install -y clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64

    - name: Checkout
      uses: actions/checkout@v5

    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: ${{ matrix.dotnet_version }}

    - name: Login GitHub packages
      run: |
        dotnet nuget add source --username MIRIMIRIM --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/MIRIMIRIM/index.json"
        dotnet restore

    - name: Change to Ikkoku and Publish
      run: |
        cd ./src/Ikkoku
        dotnet restore
        dotnet publish -f ${{ matrix.target }} -c Release -r "${{ matrix.env.identifier }}-${{ matrix.arch }}"
        # /p:PublishAot=false /p:PublishSingleFile=true /p:DefineConstants=NotAot

    - name: Set short version
      shell: bash
      run: |
          ver_short=`git rev-parse --short HEAD`
          echo "VERSION=$ver_short" >> $GITHUB_ENV

    - name: Upload exe files
      uses: actions/upload-artifact@v4
      with:
        name: Ikkoku_g${{ env.VERSION }}_${{ matrix.env.identifier }}-${{ matrix.arch }}
        path: |
          src/Ikkoku/bin/Release/${{ matrix.target }}/${{ matrix.env.identifier }}-${{ matrix.arch }}/publish/
          !src/Ikkoku/bin/Release/${{ matrix.target }}/${{ matrix.env.identifier }}-${{ matrix.arch }}/publish/*.pdb
          !src/Ikkoku/bin/Release/${{ matrix.target }}/${{ matrix.env.identifier }}-${{ matrix.arch }}/publish/*.dbg
          !src/Ikkoku/bin/Release/${{ matrix.target }}/${{ matrix.env.identifier }}-${{ matrix.arch }}/publish/*.dwarf
          !src/Ikkoku/bin/Release/${{ matrix.target }}/${{ matrix.env.identifier }}-${{ matrix.arch }}/publish/*.dsym
